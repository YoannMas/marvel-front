[{"/Users/yoann/LeReacteur/projects/marvel/client/src/index.js":"1","/Users/yoann/LeReacteur/projects/marvel/client/src/App.js":"2","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Header.js":"3","/Users/yoann/LeReacteur/projects/marvel/client/src/containers/Characters.js":"4","/Users/yoann/LeReacteur/projects/marvel/client/src/containers/Comics.js":"5","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Card.js":"6","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Pagination.js":"7","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Login.js":"8"},{"size":220,"mtime":1613565493184,"results":"9","hashOfConfig":"10"},{"size":1346,"mtime":1613671299714,"results":"11","hashOfConfig":"10"},{"size":894,"mtime":1613670915528,"results":"12","hashOfConfig":"10"},{"size":2225,"mtime":1613666222587,"results":"13","hashOfConfig":"10"},{"size":3086,"mtime":1613763932884,"results":"14","hashOfConfig":"10"},{"size":1138,"mtime":1613666205571,"results":"15","hashOfConfig":"10"},{"size":1015,"mtime":1613763842530,"results":"16","hashOfConfig":"10"},{"size":1591,"mtime":1613671346308,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"jh7js7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/yoann/LeReacteur/projects/marvel/client/src/index.js",[],["40","41"],"/Users/yoann/LeReacteur/projects/marvel/client/src/App.js",["42"],"import \"./App.scss\";\nimport Header from \"./components/Header\";\nimport Characters from \"./containers/Characters\";\nimport Comics from \"./containers/Comics\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Cookies from \"js-cookie\";\n\n// switch on local or prod\nconst server = \"http://localhost:3001\";\n\nfunction App() {\n  const [loginModal, setLoginModal] = useState(false);\n  const [signupModal, setSignupModal] = useState(false);\n  const [userToken, setUserToken] = useState(Cookies.get(\"userToken\") || null);\n\n  const setUser = (token) => {\n    if (token) {\n      console.log(token);\n      Cookies.set(\"userToken\", token, { expires: 7 });\n      setUserToken(null);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header\n          loginModal={loginModal}\n          setLoginModal={setLoginModal}\n          signupModal={signupModal}\n          setSignupModal={setSignupModal}\n          server={server}\n          setUser={setUser}\n        />\n        <Switch>\n          {/* id - conditionnal params */}\n          <Route path=\"/comics/:id?\">\n            <Comics server={server} />\n          </Route>\n          <Route path=\"/\">\n            <Characters server={server} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Header.js",[],"/Users/yoann/LeReacteur/projects/marvel/client/src/containers/Characters.js",["43"],"import { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport Pagination from \"../components/Pagination\";\nconst axios = require(\"axios\");\n\nconst Characters = ({ server }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState();\n  const [name, setName] = useState(\"\");\n  const [limit, setLimit] = useState(100);\n  const [page, setPage] = useState(1);\n  const skip = (page - 1) * limit;\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${server}/characters?name=${name}&limit=${limit}&skip=${skip}`);\n      setData(response.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [name, limit, page]);\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <div style={{ height: \"100vh\" }}>\n          <span>En cours de chargement...</span>\n        </div>\n      ) : (\n        <>\n          <div className=\"title-search\">\n            <h2>Marvel Characters List</h2>\n            <input\n              type=\"text\"\n              value={name}\n              placeholder=\"search your character...\"\n              onChange={(event) => {\n                setName(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"limit\">\n            <span>Number of characters per page:</span>\n            <select\n              defaultValue=\"100\"\n              onChange={(event) => {\n                setLimit(event.target.value);\n              }}\n            >\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n              <option value=\"100\">100</option>\n            </select>\n          </div>\n          <div className=\"wrapper\" style={{ height: data.results.length < 5 && \"100vh\" }}>\n            {data.results.length === 0 && <span style={{ color: \"#fff\" }}>No character found</span>}\n            {data.results.map((el) => {\n              return <Card el={el} key={el._id} />;\n            })}\n          </div>\n          <Pagination page={page} setPage={setPage} data={data} limit={limit} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Characters;\n","/Users/yoann/LeReacteur/projects/marvel/client/src/containers/Comics.js",["44"],"import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport Pagination from \"../components/Pagination\";\nimport axios from \"axios\";\n\nconst Comics = ({ server }) => {\n  const [data, setData] = useState();\n  const [selector, setSelector] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [onChange, setOnChange] = useState(false);\n  const [limit, setLimit] = useState(100);\n  const [page, setPage] = useState(1);\n  const { id } = useParams();\n  const skip = (page - 1) * limit;\n  console.log(isLoading);\n\n  const handlePageChange = () => {\n    window.scrollTo(0, 0);\n  };\n\n  const fetchData = async () => {\n    try {\n      // fix a bug with component goes from /comics/:id to /comics\n      if (!onChange) {\n        setIsLoading(true);\n      }\n      if (id) {\n        const response = await axios.get(`${server}/comics/${id}`);\n        setData(response.data);\n        setSelector(\"comics\");\n        setIsLoading(false);\n      } else {\n        const response = await axios.get(`${server}/comics?title=${title}&limit=${limit}&skip=${skip}`);\n        setData(response.data);\n        setSelector(\"results\");\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    handlePageChange();\n    fetchData();\n  }, [title, id, limit, skip]);\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <div style={{ height: \"100vh\" }}>\n          <span style={{ color: \"#fff\" }}>En cours de chargement...</span>\n        </div>\n      ) : (\n        <>\n          <div className=\"title-search\">\n            <h2>{id ? `${data.name}'s comics` : \"Marvel Comics List\"}</h2>\n            {!id && (\n              <input\n                type=\"text\"\n                value={title}\n                placeholder=\"search your comics...\"\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                  setOnChange(true);\n                }}\n              />\n            )}\n          </div>\n          {!id && (\n            <div className=\"limit\">\n              <span>Number of comics per page:</span>\n              <select\n                defaultValue=\"100\"\n                onChange={(event) => {\n                  setLimit(event.target.value);\n                }}\n              >\n                <option value=\"25\">25</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n              </select>\n            </div>\n          )}\n          <div className=\"wrapper\" style={{ height: data[selector].length < 5 && \"100vh\" }}>\n            {data[selector].length === 0 && <span style={{ color: \"#fff\" }}>No comics found</span>}\n            {data[selector].map((el) => {\n              return <Card el={el} key={el._id} />;\n            })}\n          </div>\n          {!id && <Pagination page={page} setPage={setPage} data={data} limit={limit} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Comics;\n","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Card.js",["45","46"],"import { useLocation, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Card = ({ el }) => {\n  // state for description\n  const [display, setDisplay] = useState(false);\n  const [target, setTarget] = useState(\"\");\n  let location = useLocation();\n  const notFound = \"image_not_available\";\n\n  return (\n    <div\n      // display -verso- on click\n      className=\"card\"\n      onClick={() => {\n        setDisplay((display) => !display);\n      }}\n    >\n      <img\n        style={{ objectPosition: el.thumbnail.path.match(notFound) ? \"left\" : \"top\" }}\n        src={`${el.thumbnail.path}.${el.thumbnail.extension}`}\n        alt=\"\"\n      />\n      <div>{location.pathname === \"/\" ? <span>{el.name}</span> : location.pathname.match(location) ? <span>{el.title}</span> : \"\"}</div>\n      {display && (\n        <div className=\"verso hidden\">\n          <span>{el.description ? el.description : \"No description available for this character\"}</span>\n          {location.pathname === \"/\" && el.comics.length > 0 && <Link to={`/comics/${el._id}`}>See his comics</Link>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n",["47","48"],"/Users/yoann/LeReacteur/projects/marvel/client/src/components/Pagination.js",[],"/Users/yoann/LeReacteur/projects/marvel/client/src/components/Login.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":15,"column":10,"nodeType":"55","messageId":"56","endLine":15,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":26,"column":6,"nodeType":"59","endLine":26,"endColumn":25,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"58","line":48,"column":6,"nodeType":"59","endLine":48,"endColumn":30,"suggestions":"61"},{"ruleId":"53","severity":1,"message":"62","line":7,"column":10,"nodeType":"55","messageId":"56","endLine":7,"endColumn":16},{"ruleId":"53","severity":1,"message":"63","line":7,"column":18,"nodeType":"55","messageId":"56","endLine":7,"endColumn":27},{"ruleId":"49","replacedBy":"64"},{"ruleId":"51","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'userToken' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["68"],["69"],"'target' is assigned a value but never used.","'setTarget' is assigned a value but never used.",["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [name, limit, page, fetchData]",{"range":"74","text":"75"},"Update the dependencies array to be: [title, id, limit, skip, fetchData]",{"range":"76","text":"77"},[769,788],"[name, limit, page, fetchData]",[1416,1440],"[title, id, limit, skip, fetchData]"]