[{"/Users/yoann/LeReacteur/projects/marvel/client/src/index.js":"1","/Users/yoann/LeReacteur/projects/marvel/client/src/App.js":"2","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Header.js":"3","/Users/yoann/LeReacteur/projects/marvel/client/src/containers/Characters.js":"4","/Users/yoann/LeReacteur/projects/marvel/client/src/containers/Comics.js":"5","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Card.js":"6","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Pagination.js":"7","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Login.js":"8","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Signup.js":"9"},{"size":220,"mtime":1613565493184,"results":"10","hashOfConfig":"11"},{"size":1420,"mtime":1613817601613,"results":"12","hashOfConfig":"11"},{"size":1141,"mtime":1613815829335,"results":"13","hashOfConfig":"11"},{"size":2225,"mtime":1613666222587,"results":"14","hashOfConfig":"11"},{"size":3086,"mtime":1613763932884,"results":"15","hashOfConfig":"11"},{"size":1094,"mtime":1613817581433,"results":"16","hashOfConfig":"11"},{"size":1015,"mtime":1613763842530,"results":"17","hashOfConfig":"11"},{"size":1962,"mtime":1613816807722,"results":"18","hashOfConfig":"11"},{"size":2633,"mtime":1613817826359,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"jh7js7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yoann/LeReacteur/projects/marvel/client/src/index.js",[],["41","42"],"/Users/yoann/LeReacteur/projects/marvel/client/src/App.js",["43"],"/Users/yoann/LeReacteur/projects/marvel/client/src/components/Header.js",[],"/Users/yoann/LeReacteur/projects/marvel/client/src/containers/Characters.js",["44"],"import { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport Pagination from \"../components/Pagination\";\nconst axios = require(\"axios\");\n\nconst Characters = ({ server }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState();\n  const [name, setName] = useState(\"\");\n  const [limit, setLimit] = useState(100);\n  const [page, setPage] = useState(1);\n  const skip = (page - 1) * limit;\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${server}/characters?name=${name}&limit=${limit}&skip=${skip}`);\n      setData(response.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [name, limit, page]);\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <div style={{ height: \"100vh\" }}>\n          <span>En cours de chargement...</span>\n        </div>\n      ) : (\n        <>\n          <div className=\"title-search\">\n            <h2>Marvel Characters List</h2>\n            <input\n              type=\"text\"\n              value={name}\n              placeholder=\"search your character...\"\n              onChange={(event) => {\n                setName(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"limit\">\n            <span>Number of characters per page:</span>\n            <select\n              defaultValue=\"100\"\n              onChange={(event) => {\n                setLimit(event.target.value);\n              }}\n            >\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n              <option value=\"100\">100</option>\n            </select>\n          </div>\n          <div className=\"wrapper\" style={{ height: data.results.length < 5 && \"100vh\" }}>\n            {data.results.length === 0 && <span style={{ color: \"#fff\" }}>No character found</span>}\n            {data.results.map((el) => {\n              return <Card el={el} key={el._id} />;\n            })}\n          </div>\n          <Pagination page={page} setPage={setPage} data={data} limit={limit} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Characters;\n","/Users/yoann/LeReacteur/projects/marvel/client/src/containers/Comics.js",["45"],"import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport Pagination from \"../components/Pagination\";\nimport axios from \"axios\";\n\nconst Comics = ({ server }) => {\n  const [data, setData] = useState();\n  const [selector, setSelector] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [onChange, setOnChange] = useState(false);\n  const [limit, setLimit] = useState(100);\n  const [page, setPage] = useState(1);\n  const { id } = useParams();\n  const skip = (page - 1) * limit;\n  console.log(isLoading);\n\n  const handlePageChange = () => {\n    window.scrollTo(0, 0);\n  };\n\n  const fetchData = async () => {\n    try {\n      // fix a bug with component goes from /comics/:id to /comics\n      if (!onChange) {\n        setIsLoading(true);\n      }\n      if (id) {\n        const response = await axios.get(`${server}/comics/${id}`);\n        setData(response.data);\n        setSelector(\"comics\");\n        setIsLoading(false);\n      } else {\n        const response = await axios.get(`${server}/comics?title=${title}&limit=${limit}&skip=${skip}`);\n        setData(response.data);\n        setSelector(\"results\");\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    handlePageChange();\n    fetchData();\n  }, [title, id, limit, skip]);\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <div style={{ height: \"100vh\" }}>\n          <span style={{ color: \"#fff\" }}>En cours de chargement...</span>\n        </div>\n      ) : (\n        <>\n          <div className=\"title-search\">\n            <h2>{id ? `${data.name}'s comics` : \"Marvel Comics List\"}</h2>\n            {!id && (\n              <input\n                type=\"text\"\n                value={title}\n                placeholder=\"search your comics...\"\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                  setOnChange(true);\n                }}\n              />\n            )}\n          </div>\n          {!id && (\n            <div className=\"limit\">\n              <span>Number of comics per page:</span>\n              <select\n                defaultValue=\"100\"\n                onChange={(event) => {\n                  setLimit(event.target.value);\n                }}\n              >\n                <option value=\"25\">25</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n              </select>\n            </div>\n          )}\n          <div className=\"wrapper\" style={{ height: data[selector].length < 5 && \"100vh\" }}>\n            {data[selector].length === 0 && <span style={{ color: \"#fff\" }}>No comics found</span>}\n            {data[selector].map((el) => {\n              return <Card el={el} key={el._id} />;\n            })}\n          </div>\n          {!id && <Pagination page={page} setPage={setPage} data={data} limit={limit} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Comics;\n","/Users/yoann/LeReacteur/projects/marvel/client/src/components/Card.js",[],"/Users/yoann/LeReacteur/projects/marvel/client/src/components/Pagination.js",[],"/Users/yoann/LeReacteur/projects/marvel/client/src/components/Login.js",[],"/Users/yoann/LeReacteur/projects/marvel/client/src/components/Signup.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":15,"column":10,"nodeType":"52","messageId":"53","endLine":15,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":26,"column":6,"nodeType":"56","endLine":26,"endColumn":25,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"55","line":48,"column":6,"nodeType":"56","endLine":48,"endColumn":30,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'userToken' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["61"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [name, limit, page, fetchData]",{"range":"67","text":"68"},"Update the dependencies array to be: [title, id, limit, skip, fetchData]",{"range":"69","text":"70"},[769,788],"[name, limit, page, fetchData]",[1416,1440],"[title, id, limit, skip, fetchData]"]